from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import random
import os


# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è ‚Äî —Ç–µ–ø–µ—Ä –∑–Ω–∞—á–µ–Ω–Ω—è —Ü–µ —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
words = {
"keep": ["–∑–±–µ—Ä—ñ–≥–∞—Ç–∏", "–ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏"],
"hurt": ["–ø–æ—à–∫–æ–¥–∏—Ç–∏, —à–∫–æ–¥–∏—Ç–∏"],
"become": ["—Å—Ç–∞–≤–∞—Ç–∏"],
"begin": ["–ø–æ—á–∏–Ω–∞—Ç–∏"],
"bring": ["–ø—Ä–∏–Ω–æ—Å–∏—Ç–∏"],
"buy": ["–∫—É–ø–ª—è—Ç–∏"],
"catch": ["–∑–ª–æ–≤–∏—Ç–∏"],
"choose": ["–≤–∏–±–∏—Ä–∞—Ç–∏", "–≤–∏–±—Ä–∞—Ç–∏"],
"come": ["–ø—Ä–∏—Ö–æ–¥–∏—Ç–∏"],
"cry": ["–ø–ª–∞–∫–∞—Ç–∏"],
"dream": ["–º—Ä—ñ—è—Ç–∏"],
"draw": ["–º–∞–ª—é–≤–∞—Ç–∏"],
"drink": ["–ø–∏—Ç–∏"],
"eat": ["—ó—Å—Ç–∏"],
"fall": ["–ø–∞–¥–∞—Ç–∏"],
"feel": ["–≤—ñ–¥—á—É–≤–∞—Ç–∏"],
"fight": ["–±–∏—Ç–∏—Å—è"],
"find": ["–∑–Ω–∞—Ö–æ–¥–∏—Ç–∏"],
"fly": ["–ª—ñ—Ç–∞—Ç–∏"],
"forget": ["–∑–∞–±—É–≤–∞—Ç–∏"],
"forgive": ["–ø—Ä–æ–±–∞—á–∞—Ç–∏"],
"feed": ["–≥–æ–¥—É–≤–∞—Ç–∏"],
"get": ["–æ—Ç—Ä–∏–º–∞—Ç–∏"],
"give": ["–¥–∞–≤–∞—Ç–∏"],
"hide": ["—Ö–æ–≤–∞—Ç–∏"],
"hear": ["—á—É—Ç–∏"],
"hit": ["–≤–¥–∞—Ä—è—Ç–∏"],
"hold": ["—Ç—Ä–∏–º–∞—Ç–∏"],
"know": ["–∑–Ω–∞—Ç–∏"],
"lay": ["–∫–ª–∞—Å—Ç–∏"],
"learn": ["–¥—ñ–∑–Ω–∞–≤–∞—Ç–∏—Å—è"],
"leave": ["–∑–∞–ª–∏—à–∞—Ç–∏"],
"let": ["–¥–æ–∑–≤–æ–ª—è—Ç–∏"],
"lie": ["–±—Ä–µ—Ö–∞—Ç–∏"],
"lose": ["–ø—Ä–æ–≥—Ä–∞–≤–∞—Ç–∏"],
"make": ["—Ä–æ–±–∏—Ç–∏"],
"lend": ["–ø–æ–∑–∏—á–∞—Ç–∏"],
"mean": ["–º–∞—Ç–∏ –Ω–∞ —É–≤–∞–∑—ñ"],
"meet": ["–∑—É—Å—Ç—Ä—ñ—á–∞—Ç–∏"],
"pay": ["–ø–ª–∞—Ç–∏—Ç–∏"],
"put": ["–∫–ª–∞—Å—Ç–∏"],
"read": ["—á–∏—Ç–∞—Ç–∏"],
"rid": ["–ø–æ–∑–±—É–≤–∞—Ç–∏—Å—è"],
"say": ["–∫–∞–∑–∞—Ç–∏"],
"see": ["–±–∞—á–∏—Ç–∏"],
"seek": ["—à—É–∫–∞—Ç–∏"],
"sell": ["–ø—Ä–æ–¥–∞–≤–∞—Ç–∏"],
"send": ["–ø–æ—Å–∏–ª–∞—Ç–∏"],
"shoot": ["—Å—Ç—Ä—ñ–ª—è—Ç–∏"],
"show": ["–ø–æ–∫–∞–∑—É–≤–∞—Ç–∏"],
"shut": ["–∑–∞–∫—Ä–∏–≤–∞—Ç–∏"],
"sing": ["—Å–ø—ñ–≤–∞—Ç–∏"],
"sit": ["—Å–∏–¥—ñ—Ç–∏"],
"sleep": ["—Å–ø–∞—Ç–∏"],
"speak": ["–≥–æ–≤–æ—Ä–∏—Ç–∏"],
"spend": ["–≤–∏—Ç—Ä–∞—á–∞—Ç–∏"],
"stand": ["—Å—Ç–æ—è—Ç–∏"],
"steal": ["–∫—Ä–∞—Å—Ç–∏"],
"swim": ["–ø–ª–∞–≤–∞—Ç–∏"],
"take": ["–±—Ä–∞—Ç–∏"],
"teach": ["–Ω–∞–≤—á–∞—Ç–∏"],
"tell": ["—Ä–æ–∑–ø–æ–≤—ñ–¥–∞—Ç–∏"],
"think": ["–¥—É–º–∞—Ç–∏"],
"understand": ["—Ä–æ–∑—É–º—ñ—Ç–∏"],
"throw": ["–∫–∏–¥–∞—Ç–∏"],
"wear": ["–Ω–æ—Å–∏—Ç–∏ –æ–¥—è–≥"],
"win": ["–≤–∏–≥—Ä–∞–≤–∞—Ç–∏"],
"write": ["–ø–∏—Å–∞—Ç–∏"],
"look": ["–≥–ª—è–Ω—É—Ç–∏"],
"use": ["–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏"],
"want": ["—Ö–æ—Ç—ñ—Ç–∏"],
"work": ["–ø—Ä–∞—Ü—é–≤–∞—Ç–∏"],
"call": ["–¥–∑–≤–æ–Ω–∏—Ç–∏"],
"try": ["—Å–ø—Ä–æ–±—É–≤–∞—Ç–∏"],
"ask": ["–∑–∞–ø–∏—Ç–∞—Ç–∏"],
"need": ["–ø–æ—Ç—Ä–µ–±—É–≤–∞—Ç–∏"],
"seem": ["–∑–¥–∞—î—Ç—å—Å—è, –∑–¥–∞–≤–∞—Ç–∏—Å—è"],
"turn": ["–ø–æ–≤–µ—Ä—Ç–∞—Ç–∏"],
"follow": ["—Å–ª—ñ–¥—É–≤–∞—Ç–∏"],
"help": ["–¥–æ–ø–æ–º–∞–≥–∞—Ç–∏"],
"start": ["–ø–æ—á–∏–Ω–∞—Ç–∏"],
"run": ["–±—ñ–≥–∞—Ç–∏"],
"move": ["—Ä—É—Ö–∞—Ç–∏—Å—è"],
"believe": ["–≤—ñ—Ä–∏—Ç–∏"],
"set": ["–≤—Å—Ç–∞–Ω–æ–≤–ª—é–≤–∞—Ç–∏"],
"allow": ["–¥–æ–∑–≤–æ–ª—è—Ç–∏"],
"live": ["–∂–∏—Ç–∏"],
"happen": ["—Ç—Ä–∞–ø–ª—è—Ç–∏—Å—è"],

    # –¥–æ–¥–∞–π —ñ–Ω—à—ñ —Å–ª–æ–≤–∞ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é
}

# –ü–∞–º'—è—Ç–∞—î–º–æ, —è–∫–µ —Å–ª–æ–≤–æ –º–∏ –∑–∞–¥–∞–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
current_word = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    word = random.choice(list(words.keys()))
    current_word[user_id] = word
    await update.message.reply_text(f"–ü–µ—Ä–µ–∫–ª–∞–¥–∏ —Å–ª–æ–≤–æ: {word}")

async def handle_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    answer = update.message.text.strip().lower()

    word = current_word.get(user_id, "")
    correct_answers = words.get(word, [])

    if answer in correct_answers:
        correct_responses = [
            "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ",
            "üéâ –ú–æ–ª–æ–¥–µ—Ü—å! –í—Å–µ –≤—ñ—Ä–Ω–æ!",
            "üß† –ö—Ä–∞—Å–∞–≤–∞! –¢–æ—á–Ω–æ –≤ —Ü—ñ–ª—å!",
            "üî• –¢–∞ —Ç–∏ —Ä–æ–∑—É–º–Ω–∏–∫! –í —è–±–ª—É—á–∫–æ!",
            "üòé –ú–æ–ª–æ–¥—á–∏–Ω–∫–∞",
            "üí™ –¢–∞–∫ —Ç—Ä–∏–º–∞—Ç–∏",
            "ü§ô –í–∞—É —Ç–∞ —Ç–∏ –∫—Ä—É—Ç–∏–π",
            "ü§å –ü–µ—Ä—Ñ–µ–∫—Ç–æ!",
            "ü§ì –¢–∏ —â–æ –≤—ñ–¥–º—ñ–Ω–Ω–∏–∫? –î–∏–≤–æ–≤–∏–∂–Ω–æ!!!",
            "üëå –û–ö",
            "üçæ –í—ñ–¥–∫—Ä–∏—é –ø–ª—è—à–∫—É –∑–∞ —Ç–µ–±–µ",
            "üç∑ –ü'—é –∑–∞ —Ç–≤–æ—î –∑–¥–æ—Ä–æ–≤'—è",
            "üåù –§–∞–π–Ω–æ",
            "üåö –ù—ñ—Ñ—ñ–≥–∞ —Å–æ–±—ñ, –≥—Ä–∞–º–æ—Ç–Ω–æ!",
            "üíôüíõ –£–∫—Ä–∞—ó–Ω–∞ –≥–æ—Ä–¥–∏—Ç–∏–º–µ—Ç—å—Å—è —Ç–æ–±–æ—é",
        ]
        await update.message.reply_text(random.choice(correct_responses))
    else:
        correct_display = ", ".join(correct_answers)
        incorrect_responses = [
            f"‚ùå –¢–ê–î–ï–ô! –¥—É–º–∞–π —Ç—Ä–æ—Ö–∏ü§°, –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {correct_display}",
            f"üôÉ –ú–∏–º–æ! –ë—É–ª–æ —Ç—Ä–µ–±–∞: {correct_display}",
            f"üö´ –ù–µ –≤–≥–∞–¥–∞–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –±—É–¥–µ: {correct_display}",
            f"‚ö†Ô∏è –¢–∏ —Å–µ—Ä–π–æ–∑–Ω–æ –∑–∞—Ä–∞–∑? –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"ü§¨ –§—É –∞–∂ –≥–∏–¥–∫–æ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"ü•¥ –û—á—ñ –±–æ–ª—è—Ç—å –≤—ñ–¥ —Ç–∞–∫–æ–≥–æ... –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"‚õî –ú–µ–Ω—ñ –∑–∞ —Ç–µ–±–µ —Å–æ—Ä–æ–º–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"üíÄ –©–û–û–û–û??? –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"üí©üí©üí©üí©üí© –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"ü´µü´µü´µ –û—Å—å –Ω–µ–≤–¥–∞—Ö–∞, –•–ê –•–ê –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"ü©ª –ë–æ—Ç –ø—Ä–æ–≤—ñ–≤ –ú–†–¢... –¢–∞–º –ø—É—Å—Ç–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"‚ö∞Ô∏è –¢–≤–æ—ó –∑–Ω–∞–Ω–Ω—è –ø–æ–º–µ—Ä–ª–∏. RIP. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"üóøüóøüóø –ù–µ–º–∞ —Å–ª—ñ–≤. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"üö´ –¢–∞–¥–µ–π –Ω–µ –ø–æ–∑–æ—Ä—Å—è, –≤—á–∏—Å—å —Ç—Ä–æ—Ö–∏. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
            f"üß¨ –î–ù–ö –∞–Ω–∞–ª—ñ–∑ –ø–æ–∫–∞–∑–∞–≤: –≥–µ–Ω –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –≤—ñ–¥—Å—É—Ç–Ω—ñ–π. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_display}",
        ]
        await update.message.reply_text(random.choice(incorrect_responses))

    # –ù–æ–≤–∞ —Å–ø—Ä–æ–±–∞
    await start(update, context)

def main():
    print("Environment variables keys:", list(os.environ.keys()))
    TOKEN = os.environ["BOT_TOKEN"]
    print("TOKEN is found")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_response))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    app.run_polling()

if __name__ == "__main__":
    main()
print("Environment variables:", os.environ)